name: Destroy Chatbot Infra + App

on:
  workflow_dispatch:   # ‚úÖ manual trigger only

permissions:
  id-token: write
  contents: read

jobs:
  destroy:
    runs-on: ubuntu-latest
    env:
      TF_WORKING_DIR: infra
      RESOURCE_GROUP: platform_candidate_2
      CLUSTER_NAME: chatbot-aks
      REGION: eastus2

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # ----------------------
      # AKS cleanup
      # ----------------------
      - name: Get AKS Credentials
        run: |
          az aks get-credentials -g $RESOURCE_GROUP -n $CLUSTER_NAME --overwrite-existing
        continue-on-error: true

      - name: Uninstall Helm Releases
        run: |
          helm uninstall chatbot -n chatbot || true
          helm uninstall agic -n kube-system || true
        continue-on-error: true

      - name: Scale down node pool
        run: |
          az aks nodepool scale \
            --cluster-name $CLUSTER_NAME \
            --resource-group $RESOURCE_GROUP \
            --name systempool \
            --node-count 0 || true
        continue-on-error: true

      # ----------------------
      # Terraform destroy
      # ----------------------
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init

      - name: Detect & force-unlock Terraform state if locked
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          echo "üîç Checking for .tflock blob in backend‚Ä¶"
          LOCK_BLOB=$(az storage blob list \
            --account-name tfkpm2025 \
            --container-name tfstate \
            --prefix infra/terraform.tfstate.tflock \
            --auth-mode login \
            --query "[].name" -o tsv)

          if [ -n "$LOCK_BLOB" ]; then
            echo "‚ö†Ô∏è State lock detected. Forcing unlock..."
            terraform force-unlock -force $(date +%s) || true
          else
            echo "‚úÖ No lock found. Skipping unlock."
          fi

        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          echo "üîç Checking for .tflock blob in backend‚Ä¶"
          LOCK_BLOB=$(az storage blob list \
            --account-name tfkpm2025 \
            --container-name tfstate \
            --prefix infra/terraform.tfstate.tflock \
            --auth-mode login \
            --query "[].name" -o tsv)

          if [ -n "$LOCK_BLOB" ]; then
            echo "‚ö†Ô∏è State lock detected. Forcing unlock..."
            terraform force-unlock -force $(date +%s) || true
          else
            echo "‚úÖ No lock found. Skipping unlock."
          fi

      - name: Terraform Destroy
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform destroy -auto-approve
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          TF_VAR_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          TF_VAR_github_oidc_principal_id: ${{ secrets.AZURE_CLIENT_OBJECT_ID }}
          TF_VAR_acr_name: "myacr2025kpm"
          TF_VAR_acr_rg: "platform_candidate_2"
